<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="raisetech.StudentManagement.repository.StudentRepository">

  <!-- 受講生の全件検索 -->
  <select id="search" resultType="raisetech.StudentManagement.data.Student">
    SELECT * FROM student WHERE isDeleted = false
  </select>

  <!-- 受講生の検索 -->
  <select id="findStudentById" resultType="raisetech.StudentManagement.data.Student">
    SELECT * FROM student WHERE id = #{id}
  </select>

  <!-- 受講生のコース情報の全件検索 -->
  <select id="searchStudentCourseList" resultType="raisetech.StudentManagement.data.StudentCourse">
    SELECT * FROM student_course
  </select>

  <!-- 受講生IDに紐づく受講生コース情報の検索 -->
  <select id="searchStudentCourse" resultType="raisetech.StudentManagement.data.StudentCourse">
    SELECT * FROM student_course WHERE studentId = #{studentId}
  </select>

  <!-- 受講生の新規登録　IDは自動採番 -->
  <insert id="registerStudent" useGeneratedKeys="true" keyProperty="id" parameterType="raisetech.StudentManagement.data.Student">
    INSERT INTO student (name, hurigana, nicName, eMailAddress, liveArea, age, gender, remark)
    VALUES (#{name}, #{hurigana}, #{nicName}, #{eMailAddress}, #{liveArea}, #{age}, #{gender}, #{remark})
  </insert>

  <!-- 受講生コース情報の新規登録　IDは自動採番 -->
  <insert id="registerStudentCourse" useGeneratedKeys="true" keyProperty="courseId" parameterType="raisetech.StudentManagement.data.StudentCourse">
    INSERT INTO student_course (studentId, courseName, startday, endday)
    VALUES (#{studentId}, #{courseName}, #{startday}, #{endday})
  </insert>

  <!-- 受講生の更新 -->
  <update id="updateStudent" parameterType="raisetech.StudentManagement.data.Student">
    UPDATE student SET name = #{name}, hurigana = #{hurigana}, nicName = #{nicName}, eMailAddress = #{eMailAddress}, liveArea = #{liveArea}, age = #{age}, gender = #{gender}, remark = #{remark}, isDeleted = #{isDeleted} WHERE id = #{id}
  </update>

  <!-- 受講生のコース情報の更新 -->
  <update id="updateStudentCourse" parameterType="raisetech.StudentManagement.data.StudentCourse">
    UPDATE student_course SET courseName = #{courseName} WHERE courseId = #{courseId}
  </update>

  <!-- メールアドレスで受講生を検索 -->
  <select id="findStudentByEmail" resultType="raisetech.StudentManagement.data.Student">
    SELECT * FROM student WHERE eMailAddress = #{email}
  </select>

  <select id="findCoursesByStudentId" resultType="raisetech.StudentManagement.data.StudentCourse">
    SELECT courseId, studentId, courseName, startday, endday FROM student_course WHERE studentId = #{studentId}
  </select>

</mapper>